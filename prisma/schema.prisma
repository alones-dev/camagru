  generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Like {
  id       String  @id @default(cuid())
  post    Post    @relation(fields: [postId], references: [id])
  postId    String
  user    User    @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  
  @@unique([postId, userId])
}

model Comment {
  id String @id @default(cuid())
  content String 
  post Post @relation(fields: [postId], references: [id])
  postId String
  author User @relation(fields: [authorId], references: [id])
  authorId String
  createdAt DateTime @default(now())
}

model Post {
  id          String  @id @default(cuid())
  imagePath    String
  overlays    String?
  author     User    @relation(fields: [authorId], references: [id])
  authorId    String 
  createdAt   DateTime @default(now())

  likes      Like[]
  comments   Comment[]
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@map("sessions")
}
 
model User {
  id            String    @id @default(cuid())
  name          String?
  username      String   @unique
  email         String   @unique
  password      String
  emailVerified DateTime? @map("email_verified")
  accounts      Account[]
  sessions      Session[]

  posts         Post[]
  comments      Comment[]
  likes         Like[]
 
  @@map("users")
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
  @@map("verification_tokens")
}